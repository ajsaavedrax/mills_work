//author: Barbara Li Santi//supplied to CS 64 in Spring 2014 for the second midterm exampackage forExam2;public class DoubleLinkRing<E> {	private DoubleLinkNode<E> myStart;  	public DoubleLinkRing() {		myStart = null; // Picture S	}//constructor	public boolean add (E addMe) {		if (myStart == null) {			myStart = new DoubleLinkNode<E>(addMe);// Picture T			return true;		} //if empty ring		DoubleLinkNode<E> found = search(addMe);//Picture U		if(found != null){			return false;//not adding duplicates		}//if duplicate found		DoubleLinkNode<E> temp = 				new DoubleLinkNode<E>(addMe,myStart,myStart.myBack);// Picture V		myStart.myBack.myForward = temp;// Picture W		myStart.myBack = temp;// Picture X		return true;	}// add	public DoubleLinkNode<E> search (E findMe) {		if (myStart == null) {			return null;		}//if		if ( findMe.equals(myStart.myData) ) {			return myStart;		}//if		DoubleLinkNode<E> aux = myStart.myForward;// Picture Y		while ( aux != myStart && !findMe.equals(aux.myData)) {			aux = aux.myForward;// Picture Z		} //while		return (aux == myStart ? null : aux );	}// search	public boolean delete(E deleteMe) {		DoubleLinkNode<E> d = search (deleteMe);// Picture AA		if ( d == null ) {			return false;		}//if		if (d == d.myForward ) {			myStart = null;// Picture BB			return true;		}//if		d.myBack.myForward = d.myForward;// Picture CC		d.myForward.myBack = d.myBack;// Picture DD		if ( d == myStart ) {			myStart = myStart.myForward;// Picture EE		}//if		return true;	}// delete	public String toString() {		if ( myStart == null ) {			return "no data";		}//if		String temp = myStart.myData + "\n";		DoubleLinkNode<E> aux = myStart.myForward;		while ( aux != myStart ) {			temp += aux.myData + "\n";			aux = aux.myForward;		} // while		return temp;	} // toString}//DoubleLinkRing